{"ast":null,"code":"import _regeneratorRuntime from \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/abdifatah/Downloads/final-project-dave3615/react-app/src/components/Users/UserProfile.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport API from \"../../services/api\";\nimport { getOrderHistory as _getOrderHistory, setUser as _setUser } from \"../../store/action/actions\";\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserProfile).call(this, props));\n\n    _this.deleteAccount = function () {\n      API.deleteUser(_this.props.user.id).then(function () {\n        _this.setState({\n          deleteConfirmation: true\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            deleteConfirmation: false\n          }, function () {\n            _this.props.setUser(null);\n\n            _this.props.history.push(\"/login\");\n          });\n        }, 3000);\n      });\n    };\n\n    _this.profileChange = function (event, key) {\n      console.log(\"value you are typing: \", event.target.value);\n      console.log(\"updating: \", event.target.id);\n\n      _this.setState(_defineProperty({}, key, event.target.value));\n    };\n\n    _this.changePassword = function (e) {\n      e.preventDefault();\n\n      if (_this.state.password1.trim() === \"\" || _this.state.password2.trim() === \"\") {\n        _this.setState({\n          changePasswordError: true,\n          changePasswordErrorText: \"You have to fill both password fields\"\n        });\n      }\n\n      if (_this.state.password1 !== _this.state.password2) {\n        _this.setState({\n          changePasswordError: true,\n          changePasswordErrorText: \"Passwords must match\"\n        });\n      } else {\n        _this.setState({\n          changePasswordError: false\n        });\n\n        API.changePassword(_this.state.userId, _this.state.password1).then(function () {\n          return _this.setState({\n            changePasswordConfirmation: true\n          }, function () {\n            return setTimeout(function () {\n              _this.setState({\n                changePasswordConfirmation: false\n              });\n\n              if (_this.props.user && _this.props.user.roles !== \"Admin\") {\n                _this.props.history.push(\"/login\");\n              } else {\n                _this.props.history.push(\"/adminPage\");\n              }\n            }, 3000);\n          });\n        });\n      }\n    };\n\n    _this.profileSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var updatedUser, updateShipping;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                updatedUser = _this.props.user;\n                updatedUser[\"firstName\"] = _this.state.firstName;\n                updatedUser[\"lastName\"] = _this.state.lastName;\n                updateShipping = {\n                  id: _this.state.shippingId,\n                  firstName: _this.state.firstName,\n                  lastName: _this.state.lastName,\n                  address: _this.state.address,\n                  city: _this.state.city,\n                  postalCode: _this.state.postalCode,\n                  user_id: _this.props.user.id\n                };\n                API.putShipping(updateShipping).then(function () {\n                  return API.updateUser(updatedUser).then(function () {\n                    _this.setState({\n                      updatConfirmation: true\n                    });\n\n                    setTimeout(function () {\n                      _this.setState({\n                        updatConfirmation: false\n                      });\n                    }, 4000);\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      isLoading: false,\n      firstName: \"Idris\",\n      lastName: \"Hamid\",\n      address: \"\",\n      postalCode: \"\",\n      shippingId: \"\",\n      updatConfirmation: false,\n      deleteConfirmation: false,\n      password1: \"\",\n      password2: \"\",\n      changePasswordError: \"\",\n      changePasswordErrorText: \"\",\n      changePasswordConfirmation: false,\n      userId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.email.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var id = this.props.match.params[\"id\"];\n      this.setState({\n        userId: id\n      });\n      API.getUserById(id).then(function (user) {\n        console.log(user);\n        API.getshippingById(user.shippingList[0]).then(function (shippingInfo) {\n          console.log(\"shipping info: \", shippingInfo);\n\n          _this2.setState({\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            address: shippingInfo.address,\n            city: shippingInfo.city,\n            postalCode: shippingInfo.postalCode,\n            shippingId: shippingInfo.id\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.firstName);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"nav nav-pills mb-3\",\n        id: \"pills-tab\",\n        role: \"tablist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"nav-link active\",\n        id: \"pills-home-tab\",\n        \"data-toggle\": \"pill\",\n        href: \"#pills-home\",\n        role: \"tab\",\n        \"aria-controls\": \"pills-home\",\n        \"aria-selected\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"li\", {\n        class: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"nav-link\",\n        id: \"pills-profile-tab\",\n        \"data-toggle\": \"pill\",\n        href: \"#pills-profile\",\n        role: \"tab\",\n        \"aria-controls\": \"pills-profile\",\n        \"aria-selected\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Profile\"))), React.createElement(\"div\", {\n        class: \"tab-content\",\n        id: \"pills-tabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"tab-pane fade show active\",\n        id: \"pills-home\",\n        role: \"tabpanel\",\n        \"aria-labelledby\": \"pills-home-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"HOme content\"), React.createElement(\"div\", {\n        class: \"tab-pane fade\",\n        id: \"pills-profile\",\n        role: \"tabpanel\",\n        \"aria-labelledby\": \"pills-profile-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Profile content\")));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.rootReducer.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getOrderHistory: function getOrderHistory(id) {\n      return dispatch(_getOrderHistory(id));\n    },\n    setUser: function setUser(user) {\n      return dispatch(_setUser(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","map":{"version":3,"sources":["/Users/abdifatah/Downloads/final-project-dave3615/react-app/src/components/Users/UserProfile.js"],"names":["React","Component","connect","API","getOrderHistory","setUser","UserProfile","props","deleteAccount","deleteUser","user","id","then","setState","deleteConfirmation","setTimeout","history","push","profileChange","event","key","console","log","target","value","changePassword","e","preventDefault","state","password1","trim","password2","changePasswordError","changePasswordErrorText","userId","changePasswordConfirmation","roles","profileSubmit","updatedUser","firstName","lastName","updateShipping","shippingId","address","city","postalCode","user_id","putShipping","updateUser","updatConfirmation","isLoading","email","length","password","confirmPassword","match","params","getUserById","getshippingById","shippingList","shippingInfo","catch","err","mapStateToProps","rootReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport API from \"../../services/api\";\nimport { getOrderHistory, setUser } from \"../../store/action/actions\";\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      firstName: \"Idris\",\n      lastName: \"Hamid\",\n      address: \"\",\n      postalCode: \"\",\n      shippingId: \"\",\n      updatConfirmation: false,\n      deleteConfirmation: false,\n      password1: \"\",\n      password2: \"\",\n      changePasswordError: \"\",\n      changePasswordErrorText: \"\",\n      changePasswordConfirmation: false,\n      userId: \"\"\n    };\n  }\n\n  deleteAccount = () => {\n    API.deleteUser(this.props.user.id).then(() => {\n      this.setState({ deleteConfirmation: true });\n      setTimeout(() => {\n        this.setState({ deleteConfirmation: false }, () => {\n          this.props.setUser(null);\n          this.props.history.push(\"/login\");\n        });\n      }, 3000);\n    });\n  };\n\n  profileChange = (event, key) => {\n    console.log(\"value you are typing: \", event.target.value);\n    console.log(\"updating: \", event.target.id);\n    this.setState({\n      [key]: event.target.value\n    });\n  };\n\n  validateForm() {\n    return (\n      this.state.email.length > 0 &&\n      this.state.password.length > 0 &&\n      this.state.password === this.state.confirmPassword\n    );\n  }\n\n  changePassword = e => {\n    e.preventDefault();\n    if (\n      this.state.password1.trim() === \"\" ||\n      this.state.password2.trim() === \"\"\n    ) {\n      this.setState({\n        changePasswordError: true,\n        changePasswordErrorText: \"You have to fill both password fields\"\n      });\n    }\n    if (this.state.password1 !== this.state.password2) {\n      this.setState({\n        changePasswordError: true,\n        changePasswordErrorText: \"Passwords must match\"\n      });\n    } else {\n      this.setState({ changePasswordError: false });\n      API.changePassword(this.state.userId, this.state.password1).then(() =>\n        this.setState({ changePasswordConfirmation: true }, () =>\n          setTimeout(() => {\n            this.setState({ changePasswordConfirmation: false });\n            if (this.props.user && this.props.user.roles !== \"Admin\") {\n              this.props.history.push(\"/login\");\n            } else {\n              this.props.history.push(\"/adminPage\");\n            }\n          }, 3000)\n        )\n      );\n    }\n  };\n\n  profileSubmit = async event => {\n    event.preventDefault();\n\n    let updatedUser = this.props.user;\n    updatedUser[\"firstName\"] = this.state.firstName;\n    updatedUser[\"lastName\"] = this.state.lastName;\n\n    let updateShipping = {\n      id: this.state.shippingId,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      address: this.state.address,\n      city: this.state.city,\n      postalCode: this.state.postalCode,\n      user_id: this.props.user.id\n    };\n\n    API.putShipping(updateShipping).then(() =>\n      API.updateUser(updatedUser).then(() => {\n        this.setState({ updatConfirmation: true });\n        setTimeout(() => {\n          this.setState({ updatConfirmation: false });\n        }, 4000);\n      })\n    );\n  };\n\n  componentWillMount() {\n    const id = this.props.match.params[\"id\"];\n    this.setState({ userId: id });\n    API.getUserById(id).then(user => {\n      console.log(user);\n      API.getshippingById(user.shippingList[0])\n        .then(shippingInfo => {\n          console.log(\"shipping info: \", shippingInfo);\n          this.setState({\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            address: shippingInfo.address,\n            city: shippingInfo.city,\n            postalCode: shippingInfo.postalCode,\n            shippingId: shippingInfo.id\n          });\n        })\n        .catch(err => console.log(err));\n    });\n  }\n\n  render() {\n    console.log(this.state.firstName);\n    return (\n      <div>\n        <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link active\"\n              id=\"pills-home-tab\"\n              data-toggle=\"pill\"\n              href=\"#pills-home\"\n              role=\"tab\"\n              aria-controls=\"pills-home\"\n              aria-selected=\"true\"\n            >\n              Home\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              id=\"pills-profile-tab\"\n              data-toggle=\"pill\"\n              href=\"#pills-profile\"\n              role=\"tab\"\n              aria-controls=\"pills-profile\"\n              aria-selected=\"false\"\n            >\n              Profile\n            </a>\n          </li>\n        </ul>\n        <div class=\"tab-content\" id=\"pills-tabContent\">\n          <div\n            class=\"tab-pane fade show active\"\n            id=\"pills-home\"\n            role=\"tabpanel\"\n            aria-labelledby=\"pills-home-tab\"\n          >\n            HOme content\n          </div>\n          <div\n            class=\"tab-pane fade\"\n            id=\"pills-profile\"\n            role=\"tabpanel\"\n            aria-labelledby=\"pills-profile-tab\"\n          >\n            Profile content\n          </div>\n        </div>\n\n        {/* <div className=\"signup-form\">\n          {this.state.deleteConfirmation && (\n            <div class=\"alert alert-danger mx-auto\" role=\"alert\">\n              The account has been parmenantly deleted\n            </div>\n          )}\n          {this.state.updatConfirmation && (\n            <div class=\"alert alert-success mx-auto\" role=\"alert\">\n              The profile been successfully updated\n            </div>\n          )}\n          <form onSubmit={this.profileSubmit}>\n            <h2>Profile</h2>\n\n            <div className=\"form-group\">\n              <div className=\"row\">\n                <div className=\"col-xs-6\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"first_name\"\n                    placeholder=\"First Name\"\n                    required=\"required\"\n                    value={this.state.firstName}\n                    onChange={event => this.profileChange(event, \"firstName\")}\n                  />\n                </div>\n                <div className=\"col-xs-6\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"last_name\"\n                    placeholder=\"Last Name\"\n                    required=\"required\"\n                    value={this.state.lastName}\n                    onChange={event => this.profileChange(event, \"lastName\")}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group\" bsSize=\"large\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Address\"\n                value={this.state.address}\n                onChange={event => this.profileChange(event, \"address\")}\n              />\n            </div>\n            <div className=\"form-group\" bsSize=\"large\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"city\"\n                value={this.state.city}\n                onChange={event => this.profileChange(event, \"city\")}\n              />\n            </div>\n            <div className=\"form-group\" bsSize=\"large\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"postalcode\"\n                value={this.state.postalCode}\n                onChange={event => this.profileChange(event, \"postalCode\")}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-success btn-lg btn-block\"\n              >\n                UPDATE\n              </button>\n            </div>\n          </form>\n\n          <div className=\"form-group\">\n            <button\n              className=\"btn btn-warning btn-lg btn-block\"\n              data-toggle=\"collapse\"\n              data-target=\"#collapseExample\"\n            >\n              CHANGE PASSWORD\n            </button>\n\n            <div class=\"collapse\" id=\"collapseExample\">\n              <form>\n                {this.state.changePasswordError && (\n                  <div class=\"alert alert-danger mx-auto\" role=\"alert\">\n                    {this.state.changePasswordErrorText}\n                  </div>\n                )}\n                {this.state.changePasswordConfirmation && (\n                  <div class=\"alert alert-success mx-auto\" role=\"alert\">\n                    Password has been successfully changed.\n                  </div>\n                )}\n\n                <div class=\"form-group\">\n                  <label for=\"exampleInputPassword1\">New password</label>\n                  <input\n                    value={this.state.password1}\n                    onChange={e => this.setState({ password1: e.target.value })}\n                    type=\"password\"\n                    class=\"form-control\"\n                    id=\"exampleInputPassword1\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"exampleInputPassword1\">\n                    Confirm new password\n                  </label>\n                  <input\n                    value={this.state.password2}\n                    onChange={e => this.setState({ password2: e.target.value })}\n                    type=\"password\"\n                    class=\"form-control\"\n                    id=\"exampleInputPassword1\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n\n                <button\n                  onClick={this.changePassword}\n                  type=\"submit\"\n                  class=\"btn btn-primary\"\n                >\n                  Change\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <button\n              onClick={this.deleteAccount}\n              className=\"btn btn-danger btn-lg btn-block\"\n            >\n              DELETE ACCOUNT\n            </button>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.rootReducer.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getOrderHistory: id => dispatch(getOrderHistory(id)),\n    setUser: user => dispatch(setUser(user))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserProfile);\n"]},"metadata":{},"sourceType":"module"}